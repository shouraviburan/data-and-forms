{"version":3,"sources":["pages/Auth.js","Card.js","pages/Countries.js","components/AuthCheck.js","App.js","reportWebVitals.js","index.js"],"names":["props","className","onSubmit","e","preventDefault","console","log","data","email","target","value","pass","options","method","headers","body","JSON","stringify","nativeEvent","submitter","id","fetch","then","result","json","output","status","alert","message","localStorage","setItem","token","setIsLoggedIn","removeItem","name","type","src","imgSrc","Countries","useState","countryList","setCountryList","useEffect","map","item","flag","isLoggedIn","children","App","getItem","country","personalRoutes","path","exact","AuthCheck","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.7e1badf3.chunk.js","sourcesContent":["import './Auth.css';\n\nexport default function(props) {\n\n    let submitHandler = (e) => {\n        e.preventDefault();\n        console.log(e);\n\n        let data = {};\n\n        data.email = e.target[0].value;\n        data.pass = e.target[1].value;\n\n        let urlRegister = 'https://auth404.herokuapp.com/api/auth/register';\n        let urlLogin = 'https://auth404.herokuapp.com/api/auth/login';\n        let options = {\n            method:'POST', \n            headers: {\n                'Content-Type': 'application/json'\n                // 'Content-Type': 'application/x-www-form-urlencoded',\n            },\n            body:JSON.stringify(data)\n        }\n\n        if (e.nativeEvent.submitter.id == \"register\"){\n            fetch(urlRegister, options).then(result=>result.json().then(output=>\n                {\n                    if (output.status == 'success') {\n                        alert('Congrats, you registered as well! Please login.')\n                    } else {\n                        alert(output.message)\n                    }\n                    console.log(output);\n                }));\n        } else if (e.nativeEvent.submitter.id == \"login\") {\n            fetch(urlLogin, options)\n            .then(result=>result.json()\n                .then(output=>{\n                    if (output.status == 'success') {\n                        localStorage.setItem('token', output.token);\n                        //console.log(props.setIsLoggedIn);\n                        props.setIsLoggedIn(true);\n                    } else {\n                        localStorage.removeItem('token');\n                    }\n                }));\n        }\n    }\n\n    return (\n        <div className = \"wrapper\">\n            <form onSubmit = {submitHandler}>\n                <input name = \"email\" type = \"email\" />\n                <input  name = \"pass\" type = \"password\" />\n                <section>\n                    <input id = \"register\" type = \"submit\" value = \"Register\"/>\n                    <input id = \"login\" type = \"submit\" value = \"Login\"/>\n                </section>\n            </form>\n        </div>\n    )\n}\n","import './Card.css';\n\nexport default function (props) {\n    return(\n        <div className = \"card\">\n            <img src = {props.imgSrc}/>\n            <h3>{props.name}</h3>\n        </div>\n    );\n}","import {useState, useEffect} from 'react';\nimport Card from '../Card';\n\nfunction Countries() {\n\n    const [countryList, setCountryList] = useState([])\n\n    let url = 'https://restcountries.eu/rest/v2/all';\n    let options = {\n        /* timeDiff: '1',\n        component:item => <Card imgSrc = {item.flag} name = {item.name}/>,\n        log:true */\n    };\n\n    useEffect(()=>{\n\n        //axios({url, ...options}).then(res => console.log('axios', res)); \n\n        /* fetch(url,options).then(result=>result.json().then(output=>{\n        console.log('fetch',output, result)\n        })); */\n\n        //kyc(url, options).then(res => setCountryList(res));\n\n        fetch(url, options).then(result => {\n            console.log(result);\n            result.json().then(output => {\n                //console.log(output);\n                //Code goes here...\n                //TO-DO: check map below\n                setCountryList(output.map(item=><Card \n                                                imgSrc = {item.flag} \n                                                name = {item.name}\n                                                />\n                ));\n            })\n        });\n    }, []);\n\n    return (\n        <div className=\"App\">\n        <header className=\"App-header\">\n            {countryList}\n        </header>\n        </div>\n    );\n}\n\nexport default Countries;\n","import Auth from \"../pages/Auth\";\n\nexport default function (props) {\n    let output;\n    if (props.isLoggedIn == true) {\n        output = props.children;\n    } else {\n        output = <Auth setIsLoggedIn = {props.setIsLoggedIn} />\n    }\n    return output;\n}","import './App.css';\nimport {Route, Switch} from 'react-router-dom';\nimport Auth from './pages/Auth';\nimport Countries from './pages/Countries';\nimport {useState, useEffect} from 'react';\nimport AuthCheck from './components/AuthCheck';\n\nfunction App() {\n\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  //checks local storage and updates the state\n  useEffect(() => {\n    let token = localStorage.getItem('token');\n    if (token != null) {\n      setIsLoggedIn(true);\n    } else {\n      setIsLoggedIn(false);\n    }\n  }, []);\n\n  let country = <Auth setIsLoggedIn = {setIsLoggedIn}/>;\n  if (isLoggedIn) {\n    country = <Countries/>\n  }\n\n  let personalRoutes = [\n    <Route path = \"/personal/home\"><h1>Test</h1></Route>,\n    <Route path = \"/personal/emails\">{country}</Route>,\n    <Route path = \"/personal/dashboard\"><h1>Test2</h1></Route>,\n    <Route path = \"/personal/profile\">{country}</Route>\n  ];\n\n  let authCheck = <Auth setIsLoggedIn = {setIsLoggedIn}/>;\n\n  return (\n    <Switch>\n      <Route exact path = \"/\">\n        <AuthCheck isLoggedIn = {isLoggedIn} setIsLoggedIn = {setIsLoggedIn}>\n          <Countries/>\n        </AuthCheck>\n      </Route>\n\n      <Route path = \"/auth\">\n        <Auth setIsLoggedIn = {setIsLoggedIn}/>\n      </Route>\n\n      <Route path = \"/personal\">\n        <AuthCheck isLoggedIn = {isLoggedIn} setIsLoggedIn = {setIsLoggedIn}>\n          {personalRoutes}\n        </AuthCheck>\n        {/*isLoggedIn?personalRoutes:authCheck*/}\n      </Route>\n\n      <Route path = \"/countries\" >\n        <AuthCheck isLoggedIn = {isLoggedIn} setIsLoggedIn = {setIsLoggedIn}>\n          <Countries/>\n        </AuthCheck>\n        {/* country */}\n      </Route>\n    </Switch>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter as Router} from 'react-router-dom';\n\nReactDOM.render(\n  <Router basename={process.env.PUBLIC_URL}>\n    <App/>\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}